server:
  port: 19999 # 运行端口
  servlet:
    context-path: /api
spring:
  application:
    name: no-work # 项目名
  profiles:
    active: dev # 指定当前运行环境
  datasource: # 数据源
    url: jdbc:mysql://${no-work.mysql.ip:127.0.0.1}:${no-work.mysql.port:3306}/${no-work.mysql.db:no-work}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${no-work.mysql.username:root}
    password: ${no-work.mysql.password:123456}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: ${no-work.redis.host:127.0.0.1}
      port: ${no-work.redis.port:6379}
      database: 0 # 指定默认数据库
      timeout: 1800000
      password: ${no-work.redis.password:}
  mail: # spring-mail 配置
    host: smtp.qq.com
    username: your_email@qq.com
    password: your_smtp_auth_code   # 注意是授权码，不是邮箱密码
    properties:
      mail:
        smtp:
          ssl:
            enable: true # 启用SSL
    default-encoding: UTF-8
sa-token: # Sa-Token 配置
  # token 名称（同时也是 cookie 名称）
  token-name: nowork-satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: tik
  # 是否输出操作日志
  is-log: true
